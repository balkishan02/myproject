<?php
declare(strict_types=1);

namespace App\Controller;

use http\Encoding\Stream\Enbrotli;

/**
 * Userapi Controller
 *
 * @property \App\Model\Table\UserapiTable $Userapi
 * @method \App\Model\Entity\Userapi[]|\Cake\Datasource\ResultSetInterface paginate($object = null, array $settings = [])
 */
class UserapiController extends AppController
{
    public function initialize(): void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
//        $this->loadModel();
        $this->loadComponent('RequestHandler');
//        $this->loadComponent('Flash');
//        $this->loadComponent('Authentication.Authentication');
    }

    /**
     * Index method
     *
     * @return \Cake\Http\Response|null|void Renders view
     */
    public function index()
    {
//        $userapi = $this->paginate($this->Userapi);
        $userapi = $this->Userapi->find("all")->all();
//        $this->set(compact('userapi'));
        $this->set([
            'message' => 'Api Run Successfully',
            'userapi' => $userapi,
            '_serialize' => ['userapi', 'message']
        ]);
//        $this->viewBuilder()->setOption('serialize',["userapi"]);
    }

    /**
     * View method
     *
     * @param string|null $id Userapi id.
     * @return \Cake\Http\Response|null|void Renders view
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function view($id = null)
    {
        $userapi = $this->Userapi->get($id, [
            'contain' => [],
        ]);

        $this->set(compact('userapi'));
    }

    /**
     * Add method
     *
     * @return \Cake\Http\Response|null|void Redirects on successful add, renders view otherwise.
     */
    public function add()
    {
//        $userdata = $this->Userapi->find("all")->all();
        $userapi = $this->Userapi->newEmptyEntity();
        if ($this->request->is('post')) {
            $userapi = $this->Userapi->patchEntity($userapi, $this->request->getData());
//            echo "<pre>";print_r($this->request->getData());die();
            if ($this->Userapi->save($userapi)) {
                $this->Flash->success(__('The userapi has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The userapi could not be saved. Please, try again.'));
        }
        $this->set(compact('userapi'));
//        $this->set([
//            'message' => 'Api Run Successfully',
//            'User-data' => $userapi,
//            '_serialize' => ['User-data', 'message']
//        ]);
//        $this->set('_serialize', ['userapi']);
//        $this->viewBuilder()->setOption('serialize',["userapi"]);
    }

    /**
     * Edit method
     *
     * @param string|null $id Userapi id.
     * @return \Cake\Http\Response|null|void Redirects on successful edit, renders view otherwise.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function edit($id = null)
    {
        $userapi = $this->Userapi->get($id, [
            'contain' => [],
        ]);
        if ($this->request->is(['patch', 'post', 'put'])) {
            $userapi = $this->Userapi->patchEntity($userapi, $this->request->getData());
            if ($this->Userapi->save($userapi)) {
                $this->Flash->success(__('The userapi has been saved.'));

                return $this->redirect(['action' => 'index']);
            }
            $this->Flash->error(__('The userapi could not be saved. Please, try again.'));
        }
        $this->set(compact('userapi'));
    }

    /**
     * Delete method
     *
     * @param string|null $id Userapi id.
     * @return \Cake\Http\Response|null|void Redirects to index.
     * @throws \Cake\Datasource\Exception\RecordNotFoundException When record not found.
     */
    public function delete($id = null)
    {
        $this->request->allowMethod(['post', 'delete']);
        $userapi = $this->Userapi->get($id);
        if ($this->Userapi->delete($userapi)) {
            $this->Flash->success(__('The userapi has been deleted.'));
        } else {
            $this->Flash->error(__('The userapi could not be deleted. Please, try again.'));
        }

        return $this->redirect(['action' => 'index']);
    }
//    public function receive(){
//        $id = $this->request->getData('id');
//        exit($id);
//    }


}
